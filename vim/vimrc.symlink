set bs=2
set history=50
set hlsearch
set noautoindent
set nocompatible
set nobackup
set pastetoggle=<F11>
set ruler
syntax on
filetype plugin on

set viminfo='20,<1000,s1000 " Bigger paste buffer - https://stackoverflow.com/questions/17812111/default-buffer-size-to-copy-paste-in-vim

"Proper tabbing
set tabstop=4
set shiftwidth=4
set noexpandtab

"Prolog
autocmd BufRead *.pro set filetype=prolog
autocmd BufRead *.mysql set filetype=mysql
autocmd BufRead,BufNewFile /usr/local/nginx/conf/* set ft=nginx
autocmd BufRead,BufNewFile nginx.conf set ft=nginx
autocmd BufRead,BufNewFile *.gv set filetype=dot
autocmd BufRead,BufNewFile *.md set filetype=markdown
autocmd BufRead,BufNewFile */source/_posts/* set filetype=octopress
autocmd BufRead,BufNewFile */source/*.md set filetype=octopress
autocmd BufRead,BufNewFile */source/*.html set filetype=liquid
autocmd BufRead,BufNewFile Vagrantfile set filetype=ruby " They're created with a modeline that should do this, but I can't figure out why it doesn't work, so here goes...
autocmd BufRead,BufNewFile Puppetfile set filetype=ruby
autocmd BufRead,BufNewFile *.wsgi set filetype=python

set background=dark

"Pathogen - https://github.com/tpope/vim-pathogen
execute pathogen#infect()

"Converting C to Go via regex? Hell yeah!
command! GoProph
	\ %s/TRUE/true/ge |
	\ %s/FALSE/false/ge |
	\ %s/->/./ge |
	\ %s/NULL/nil/ge |
	\ %s/ ACT_/ C.ACT_/ge |
	\ %s/ AFF_/ C.AFF_/ge |
	\ %s/ COND_/ C.COND_/ge |
	\ %s/ EM_/ C.EM_/ge |
	\ %s/ EX_/ C.EX_/ge |
	\ %s/ PLR_/ C.PLR_/ge |
	\ %s/ POS_/ C.POS_/ge |
	\ %s/ PULSE_/ C.PULSE_/ge |
	\ %s/ ROOM_/ C.ROOM_/ge |
	\ %s/ SECT_/ C.SECT_/ge |
	\ %s/ TO_/ C.TO_/ge |
	\ %s/ TRIG_/ C.TRIG_/ge |
	\ %s/ WIZ_/ C.WIZ_/ge |
	\ %s/REMOVE_BIT(/C.remove_bit(\&/ge |
	\ %s/SET_BIT(/C.set_bit(\&/ge |
	\ %s/for \+(\(.*\))/for \1/ge |
	\ %s/if !str_cmp(arg, .*) || !str_cmp(arg, \(.*\))/if strings.HasPrefix(\1, arg)/ge |
	\ %s/	act/	go_act/ge |
	\ %s/	send_to_char/	go_send_to_char/ge
