set bs=2
set history=50
set hlsearch
set noautoindent
set nocompatible
set nobackup
set ruler
set mouse=
syntax on
filetype plugin on

if !has('nvim')
	set pastetoggle=<F11>
endif

set viminfo='20,<1000,s1000 " Bigger paste buffer - https://stackoverflow.com/questions/17812111/default-buffer-size-to-copy-paste-in-vim

"Proper tabbing
set tabstop=4
set shiftwidth=4
set noexpandtab

"Don't add newline at EOF if it's missing.
"I believe in EOL at EOF but I do not enjoy accidentally introducing unrelated
"changes into commits.
set nofixendofline

"Prolog
autocmd BufRead *.pro set filetype=prolog
autocmd BufRead *.mysql set filetype=mysql
autocmd BufRead,BufNewFile /usr/local/nginx/conf/* set ft=nginx
autocmd BufRead,BufNewFile nginx.conf set ft=nginx
autocmd BufRead,BufNewFile *.gv set filetype=dot
autocmd BufRead,BufNewFile *.md set filetype=markdown
autocmd BufRead,BufNewFile */source/_posts/* set filetype=octopress
autocmd BufRead,BufNewFile */source/*.md set filetype=octopress
autocmd BufRead,BufNewFile */source/*.html set filetype=liquid
autocmd BufRead,BufNewFile Vagrantfile set filetype=ruby " They're created with a modeline that should do this, but I can't figure out why it doesn't work, so here goes...
autocmd BufRead,BufNewFile Puppetfile set filetype=ruby
autocmd BufRead,BufNewFile *.wsgi set filetype=python

"I don't understand why the default vim yaml stuff has 4-space tabs, but 2 is
"more conventional! https://stackoverflow.com/a/37488992/928098
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab

" Swap the word the cursor is on with the next word (which can be on a
" newline, and punctuation is "skipped"):
" https://superuser.com/a/290384/120166
nmap <silent> gw "_yiw:s/\(\%#\w\+\)\(\_W\+\)\(\w\+\)/\3\2\1/<CR><C-o>:noh<CR>

set background=dark

"Pathogen - https://github.com/tpope/vim-pathogen
if !has('nvim')
	execute pathogen#infect()
endif

" I wish this could be `wcn` but oh well
command Wcn :w | :cn

" https://www.reddit.com/r/neovim/comments/1d66jlw/color_scheme_problems_in_0100/
" Neovim's new colorscheme may have "different (I'd argue, better) definitions
" and links of built-in groups" but it also seems super drab, so gimme
" vim-style
if has('nvim')
	colorscheme vim
endif
" Also don't take from my terminal!
set notgc

"Converting C to Go via regex? Hell yeah!
command! GoProph
	\ %s/TRUE/true/ge |
	\ %s/FALSE/false/ge |
	\ %s/->/./ge |
	\ %s/NULL/nil/ge |
	\ %s/ gsn_/ C.gsn_/ge |
	\ %s/ AC_/ C.AC_/ge |
	\ %s/ ACT_/ C.ACT_/ge |
	\ %s/ AFF_/ C.AFF_/ge |
	\ %s/ AFF2_/ C.AFF2_/ge |
	\ %s/ APPLY_/ C.APPLY_/ge |
	\ %s/ ASSIST_/ C.ASSIST_/ge |
	\ %s/ AQUEST_/ C.AQUEST_/ge |
	\ %s/ COMM_/ C.COMM_/ge |
	\ %s/ COND_/ C.COND_/ge |
	\ %s/ CONT_/ C.CONT_/ge |
	\ %s/ DAM_/ C.DAM_/ge |
	\ %s/ EM_/ C.EM_/ge |
	\ %s/ EX_/ C.EX_/ge |
	\ %s/ GOD_/ C.GOD_/ge |
	\ %s/ IMM_/ C.IMM_/ge |
	\ %s/ ITEM_/ C.ITEM_/ge |
	\ %s/ LEVEL_/ C.LEVEL_/ge |
	\ %s/ MAX_/ C.MAX_/ge |
	\ %s/ MEM_/ C.MEM_/ge |
	\ %s/ NOTE_/ C.NOTE_/ge |
	\ %s/ OBJ_/ C.OBJ_/ge |
	\ %s/ OFF_/ C.OFF_/ge |
	\ %s/ PENALTY_/ C.PENALTY_/ge |
	\ %s/ PLR_/ C.PLR_/ge |
	\ %s/ POS_/ C.POS_/ge |
	\ %s/ PULSE_/ C.PULSE_/ge |
	\ %s/ ROOM_/ C.ROOM_/ge |
	\ %s/ SECT_/ C.SECT_/ge |
	\ %s/ STAT_/ C.STAT_/ge |
	\ %s/ TARGET_/ C.TARGET_/ge |
	\ %s/ TIMED_/ C.TIMED_/ge |
	\ %s/ TO_/ C.TO_/ge |
	\ %s/ TRIG_/ C.TRIG_/ge |
	\ %s/ TYPE_/ C.TYPE_/ge |
	\ %s/ WEAPON_/ C.WEAPON_/ge |
	\ %s/ WEAR_/ C.WEAR_/ge |
	\ %s/ C.WIZ_/ WIZ_/ge |
	\ %s/REMOVE_BIT(/C.remove_bit(\&/ge |
	\ %s/SET_BIT(/C.set_bit(\&/ge |
	\ %s/void *\(do_.*\)(.*/func \1 (ch *C.CHAR_DATA, argument *C.char) {/ge |
	\ %s/!str_prefix(\(.\{-}\), \(.\{-}\))/strings.HasPrefix(\2, \1)/ge |
	\ %s/for \+(\(.*\))/for \1/ge |
	"\ %s/if !str_cmp(arg, .*) || !str_cmp(arg, \(.*\))/if strings.HasPrefix(\1, arg)/ge |
	\ %s/	act/	go_act/ge |
	\ %s/	send_to_char/	go_send_to_char/ge
